[{"D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\index.js":"1","D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\App.js":"2","D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":1978,"mtime":1611544044009,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"oiiizd",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\index.js",[],["17","18"],"D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\App.js",["19"],"import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\n\nfunction App() {\n  const [weight, setWeight] = useState(89);\n  const [bottles, setBottles] = useState(3);\n  const [time, setTime] = useState(1);\n  const [gender, setGender] = useState('male');\n  const [alcLevel, setAlcLevel] = useState(0);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let result = 0;\n    let litres = bottles * 0.33;\n    let grams = litres * 8 * 4.5;\n    let burning = weight / 10;\n    let gramsLeft = grams - (burning * time);\n    if (gender === 'male') {\n      result = gramsLeft / (weight * 0.7);\n      //result = (((bottles * 0.33) * 8 * 4.5) - ((weight / 10) * time)) / (weight * 0.7);\n    } else {\n      result = gramsLeft / (weight * 0.6);\n    }\n    setAlcLevel(result);\n  }\n\n  return (\n    <div style={{marginTop: 30}}>\n      <form onSubmit={handleSubmit}>\n        <h3>Calculating alcohol blood level</h3>\n        <div>\n          <label>Weight</label>\n          <input type=\"number\" step=\"1\" value={weight} onChange={e => setWeight(e.target.value)}/>\n        </div>\n        <div>\n          <label>Bottles</label>\n          <input type=\"number\" step=\"1\" value={bottles} onChange={e => setBottles(e.target.value)}/>\n        </div>\n        <div>\n          <label>Time</label>\n          <input type=\"number\" step=\"1\" value={time} onChange={e => setTime(e.target.value)}/>\n        </div>\n        <div>\n          <label>Gender</label>\n          <div>\n            <input type=\"radio\" name=\"gender\" value=\"male\" defaultChecked onChange={e => setGender(e.target.value)} /><label>Male</label>\n            <input type=\"radio\" name=\"gender\" value=\"female\" onChange={e => setGender(e.target.value)} /><label>Female</label>\n          </div>          \n        </div>\n        <div>          \n          <output style={{marginLeft: '5px'}}>{alcLevel.toFixed(2)}</output>\n        </div>\n        <button>Calculate</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Opiskelu\\Dynaaminen verkosivu\\Alcometer\\alcometer\\src\\reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":12},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]